Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'tp1-105964-Src'!!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 19:50'!esPersonalEsencial: unNombrePersona  	^(self buscarPersona: unNombrePersona) esEscencial.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 20:22'!burbujaPinchada: unNombreBurbuja  	^(self buscarBurbuja: unNombreBurbuja) estaPinchada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:33'!agregarA: unNombreBurbuja alColegio: unNombreColegio 	(self buscarColegio: unNombreColegio) agregarA: (self buscarBurbuja: unNombreBurbuja).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:41'!clasesPresencialesEn: unNombreColegio 	^(self buscarColegio: unNombreColegio) hayClasesPresenciales.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 15:12'!nuevaPersona: unNombrePersona	|unaPersona|	(unNombrePersona = '')ifTrue: [NombreVacioError signal ].	unaPersona := Persona new.	unaPersona asignarNombre: unNombrePersona.	personas detect: [ :persona | (persona nombre) = unNombrePersona ] ifFound: [ DosNombresIgualesError signal ] .	personas add: unaPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:18'!agregarSintoma: unSintoma a: unNombrePersona  	(self buscarPersona: unNombrePersona) agregarSintoma: unSintoma.		! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 15:12'!nuevoColegio: unNombreColegio 	|unColegio|	(unNombreColegio = '')ifTrue: [NombreVacioError signal ].	unColegio := Colegio new.	unColegio asignarNombre: unNombreColegio.	colegios detect: [ :colegio | (colegio nombre) = unNombreColegio ] ifFound: [ DosNombresIgualesError signal ].	colegios add: unColegio.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 19:01'!diagnosticoDe: unNombrePersona 	^(self buscarPersona: unNombrePersona) obtenerDiagnostico.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:01'!agregarA: unNombrePersona aLaBurbuja: unNombreBurbuja 	|unaPersona unaBurbuja|	unaPersona := (self buscarPersona: unNombrePersona).	unaBurbuja := (self buscarBurbuja: unNombreBurbuja).	unaBurbuja agregarA: unaPersona.	unaPersona estaEnLaBurbuja: unaBurbuja 	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 19:01'!contactoEstrechoEntre: unNombrePersona y: otroNombrePersona. 	(self buscarPersona: unNombrePersona) tuvoContactoEstrecho.	(self buscarPersona: otroNombrePersona) tuvoContactoEstrecho.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/21/2021 12:23'!buscarPersona: unNombrePersona 	|personaBuscada|		personaBuscada := personas detect: [ :persona | (persona nombre) = unNombrePersona ] ifNone: [ NombreInexistenteError signal ] .		^personaBuscada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 16:28'!puedeCircular: unNombrePersona	^((self buscarPersona: unNombrePersona) puedeCircular).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/21/2021 12:23'!buscarBurbuja: unNombreBurbuja	|burbujaBuscada|		burbujaBuscada := burbujas detect: [ :burbuja | (burbuja nombre) = unNombreBurbuja ] ifNone: [ NombreInexistenteError signal ].		^burbujaBuscada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:31'!estaVacunadx: unNombrePersona 		(self buscarPersona: unNombrePersona) vacunar.				! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 15:12'!nuevaBurbuja: unNombreBurbuja 	|nuevaBurbuja|	(unNombreBurbuja = '')ifTrue: [NombreVacioError signal ].	nuevaBurbuja := Burbuja new.	nuevaBurbuja nombre: unNombreBurbuja.	burbujas detect: [ :burbuja | (burbuja nombre) = unNombreBurbuja ] ifFound: [ DosNombresIgualesError signal ].	burbujas add: nuevaBurbuja.		! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 19:58'!esPersonaDeRiesgo: unNombrePersona 	(self buscarPersona: unNombrePersona) esPersonaDeRiesgo.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/21/2021 12:23'!buscarColegio: unNombreColegio 	|colegioBuscado|		colegioBuscado := colegios detect: [ :colegio | (colegio nombre) = unNombreColegio ] ifNone: [ NombreInexistenteError signal ].		^colegioBuscado.! !!AlgoVid methodsFor: 'initialization' stamp: 'LuciaLiceri 5/14/2021 20:20'!initialize 	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !Object subclass: #Burbuja	instanceVariableNames: 'nombre personas estadoBurbujaPinchada'	classVariableNames: ''	package: 'tp1-105964-Src'!!Burbuja methodsFor: 'accessing' stamp: 'LuciaLiceri 5/13/2021 20:11'!nombre: unNombreBurbuja	nombre := unNombreBurbuja.! !!Burbuja methodsFor: 'accessing' stamp: 'LuciaLiceri 5/13/2021 20:16'!nombre ^nombre.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:03'!estaPinchada	personas detect: [ :persona | (persona obtenerDiagnostico) = 'Positivo' ] ifFound: [ self pincharBurbuja ].	^estadoBurbujaPinchada estaPinchada.	! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:13'!pincharBurbuja	estadoBurbujaPinchada := BurbujaPinchada new.	personas do: [ :persona | persona prohibirCirculacion ].! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 18:50'!agregarA: unaPersona	personas detect: [ :persona | persona = unaPersona] ifFound: [ PersonaRepetidaError signal ].	personas add: unaPersona.		! !!Burbuja methodsFor: 'initialization' stamp: 'LuciaLiceri 5/13/2021 20:39'!initialize 	personas := OrderedCollection new.	estadoBurbujaPinchada := BurbujaNoPinchada new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Burbuja class	instanceVariableNames: 'personas'!Object subclass: #BurbujaNoPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!BurbujaNoPinchada methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 20:33'!estaPinchada 	^false.! !Object subclass: #BurbujaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!BurbujaPinchada methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 20:33'!estaPinchada 	^true.! !Error subclass: #BurbujaRepetidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!Object subclass: #Colegio	instanceVariableNames: 'nombre burbujas'	classVariableNames: ''	package: 'tp1-105964-Src'!!Colegio methodsFor: 'accessing' stamp: 'LuciaLiceri 5/14/2021 20:27'!nombre^nombre.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/21/2021 12:34'!hayClasesPresenciales	| burbujasPinchadas porcentaje |	(burbujas isEmpty) ifTrue: [ ZeroDivide signal ] .	burbujasPinchadas := burbujas count: [ :burbuja | (burbuja estaPinchada) ].	porcentaje := (burbujasPinchadas / (burbujas size)) * 100. 	^(porcentaje < 40).! !!Colegio methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:22'!asignarNombre: unNombreColegio 	nombre := unNombreColegio.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 18:50'!agregarA: unaBurbuja	burbujas detect: [ :burbuja | burbuja = unaBurbuja ] ifFound: [ BurbujaRepetidaError signal ].	burbujas add: unaBurbuja.! !!Colegio methodsFor: 'initialization' stamp: 'LuciaLiceri 5/17/2021 12:55'!initialize 	burbujas := OrderedCollection new.! !Object subclass: #ContactoEstrecho	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!ContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 13:58'!puedeCircular: unaPersona 	unaPersona prohibirCirculacion.! !Object subclass: #DiagnosticoDePersona	instanceVariableNames: 'resultado'	classVariableNames: ''	package: 'tp1-105964-Src'!!DiagnosticoDePersona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 18:02'!puedeCircular: unaPersona	self subclassResponsibility.! !!DiagnosticoDePersona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 18:04'!resultado	^resultado.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DiagnosticoDePersona class	instanceVariableNames: ''!!DiagnosticoDePersona class methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 18:28'!segun: sintomas 	|cantidadSintomas diagnostico|	diagnostico := PersonaSaludable new.	cantidadSintomas := (sintomas size).	(cantidadSintomas ~= 0) ifTrue: [ diagnostico := PersonaSospechosa new ].	(cantidadSintomas = 3) ifTrue: [ sintomas detect: [ :unSintoma | (unSintoma esHabitual) ] ifFound: [diagnostico := PersonaConfirmada new ]].		(cantidadSintomas >= 4) ifTrue: [ diagnostico := PersonaConfirmada new ].		^diagnostico.! !Error subclass: #DosNombresIgualesError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!Object subclass: #NoContactoEstrecho	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!NoContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 13:58'!puedeCircular: unaPersona! !Error subclass: #NombreInexistenteError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!Error subclass: #NombreVacioError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!Object subclass: #Persona	instanceVariableNames: 'nombre estadoCirculacion salud esPersonaDeRiesgo burbuja esContactoEstrecho'	classVariableNames: ''	package: 'tp1-105964-Src'!!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:51'!esPersonaDeRiesgo	esPersonaDeRiesgo := PersonaDeRiesgo new.	self prohibirCirculacion.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 16:34'!asignarNombre: unNombrePersona  	nombre:= unNombrePersona.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 19:10'!agregarSintoma: unNombreSintoma	self prohibirCirculacion.	salud agregarSintoma: unNombreSintoma.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/18/2021 16:28'!puedeCircular	^estadoCirculacion puedeCircular.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:45'!vacunar	self condicionesParaCircular.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:01'!estaEnLaBurbuja: unaBurbuja 	burbuja := unaBurbuja.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/14/2021 20:10'!prohibirCirculacion	estadoCirculacion := PersonaNoCircula new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 18:43'!tuvoContactoEstrecho	esContactoEstrecho := ContactoEstrecho new.	self prohibirCirculacion.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:45'!esEscencial	self condicionesParaCircular.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/13/2021 19:02'!obtenerDiagnostico	^salud obtenerDiagnostico.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 16:34'!nombre	^nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/20/2021 19:50'!condicionesParaCircular	salud diagnosticar: self.	esPersonaDeRiesgo puedeCircular: self.	esContactoEstrecho puedeCircular: self.	burbuja estaPinchada.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:17'!permitirCircular	estadoCirculacion := PersonaCircula new.! !!Persona methodsFor: 'initialization' stamp: 'LuciaLiceri 5/19/2021 18:43'!initialize 	salud := Salud new.	estadoCirculacion := PersonaNoCircula new.	esPersonaDeRiesgo := PersonaNoRiesgosa new.	esContactoEstrecho := NoContactoEstrecho new.	burbuja := SinBurbuja new.! !Object subclass: #PersonaCircula	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaCircula methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 17:34'!puedeCircular 	^true.! !DiagnosticoDePersona subclass: #PersonaConfirmada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaConfirmada methodsFor: 'initialization' stamp: 'LuciaLiceri 5/19/2021 18:10'!initialize	resultado := 'Positivo'. 	! !!PersonaConfirmada methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/19/2021 18:10'!puedeCircular: unaPersona! !Object subclass: #PersonaDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaDeRiesgo methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:59'!puedeCircular: unaPersona	unaPersona prohibirCirculacion.! !Object subclass: #PersonaNoCircula	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaNoCircula methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 17:26'!puedeCircular	^false.! !Object subclass: #PersonaNoRiesgosa	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaNoRiesgosa methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:58'!puedeCircular: unaPersona ! !Error subclass: #PersonaRepetidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!DiagnosticoDePersona subclass: #PersonaSaludable	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaSaludable methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:16'!puedeCircular: persona	persona permitirCircular.! !!PersonaSaludable methodsFor: 'initialization' stamp: 'LuciaLiceri 5/19/2021 18:14'!initialize 	resultado := 'Saludable'.! !DiagnosticoDePersona subclass: #PersonaSospechosa	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!PersonaSospechosa methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/16/2021 18:30'!puedeCircular: unaPersona 	! !!PersonaSospechosa methodsFor: 'initialization' stamp: 'LuciaLiceri 5/19/2021 18:14'!initialize 	resultado := 'Sospechoso'.! !Object subclass: #Salud	instanceVariableNames: 'sintomas diagnostico'	classVariableNames: ''	package: 'tp1-105964-Src'!!Salud methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/21/2021 11:53'!obtenerDiagnostico	diagnostico := DiagnosticoDePersona segun: sintomas.		^diagnostico resultado. ! !!Salud methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/20/2021 21:14'!agregarSintoma: unSintoma	|nuevoSintoma|		nuevoSintoma := Sintoma new.	nuevoSintoma nombre: unSintoma.	sintomas detect: [ :sintoma | (sintoma nombre) = unSintoma ] ifFound: [ SintomaRepetidoError signal ].	sintomas add: nuevoSintoma.! !!Salud methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/20/2021 20:02'!diagnosticar: unaPersona 	self obtenerDiagnostico .	diagnostico puedeCircular: unaPersona .	! !!Salud methodsFor: 'initialization' stamp: 'LuciaLiceri 5/19/2021 18:31'!initialize 	sintomas := OrderedCollection new.			! !Object subclass: #SinBurbuja	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!!SinBurbuja methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:03'!estaPinchada	! !Object subclass: #Sintoma	instanceVariableNames: 'sintomasHabituales nombre'	classVariableNames: ''	package: 'tp1-105964-Src'!!Sintoma methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/17/2021 14:42'!esHabitual 	^(sintomasHabituales includes: (self nombre)).! !!Sintoma methodsFor: 'accessing' stamp: 'LuciaLiceri 5/13/2021 18:36'!nombre: unSintoma	nombre := unSintoma.! !!Sintoma methodsFor: 'accessing' stamp: 'LuciaLiceri 5/13/2021 18:35'!nombre ^nombre.! !!Sintoma methodsFor: 'initialization' stamp: 'LuciaLiceri 5/17/2021 14:42'!initialize 	sintomasHabituales := OrderedCollection new.	sintomasHabituales add: 'Fiebre'; add: 'Tos'; add: 'Cansancio'.! !Error subclass: #SintomaRepetidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105964-Src'!